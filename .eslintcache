[{"C:\\Users\\white\\Documents\\projects\\booksearch\\src\\index.js":"1","C:\\Users\\white\\Documents\\projects\\booksearch\\src\\App.js":"2","C:\\Users\\white\\Documents\\projects\\booksearch\\src\\reportWebVitals.js":"3"},{"size":198,"mtime":1606784463186,"results":"4","hashOfConfig":"5"},{"size":1931,"mtime":1606954292437,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"8hmfn7",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\white\\Documents\\projects\\booksearch\\src\\index.js",[],["16","17"],"C:\\Users\\white\\Documents\\projects\\booksearch\\src\\App.js",["18"],"import React from 'react';\n\n\nconst api_key = 'AIzaSyDdiw_RlWpe3SVA1zdDXlMvkXuJ7NyyW48';\nconst api_URL = 'https://www.googleapis.com/books/v1/volumes';\n\nexport default class App extends React.Component{\n  state = {\n    books: []\n  }\n  onSubmit= e => {\n    e.preventDefault();\n    const params = {\n      api_key,\n      q: e.target.q.value,\n      printType: e.target.printType.value,\n      filter: e.target.filter.value\n    }\n    const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&')\n    fetch(api_URL +'?'+ queryString)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({\n          books: data.items || []\n        })\n      })\n\n  }\n   render() {\n     return ( \n     <div>     \n     <header>\n       <h1>Google Book Search</h1>\n       </header>\n       <main>\n       <h2>Search:</h2>\n        <form\n        onSubmit={this.onSubmit}\n        >\n        <input\n        type='text'\n        name='q'\n        ></input>\n        <button>Search</button>\n        <h2>Print Type:</h2>\n        <select\n        name='printType'\n        >\n        <option>all</option>\n        <option>books</option>\n        <option>magazines</option>\n        </select>\n        <h2>Book Type:</h2>\n        <select\n        name='filter'\n        >\n          <option>ebooks</option>\n          <option>free-ebooks</option>\n          <option>full</option>\n          <option>paid-ebooks</option>\n          <option>partial</option>\n        </select>\n        </form>\n        {this.state.books.map(book => (\n          <div>\n            <h2>{book.volumeInfo.title}</h2>\n            <img src={book.volumeInfo.imageLinks.thumbnail} />\n            <h3>Author: {book.volumeInfo.authors[0]}</h3>\n            <p>Price: ${book.saleInfo.listPrice.amount}</p>\n            <br />\n            <p>{book.volumeInfo.description}</p>\n          </div>\n        )\n        )}\n        </main>\n     </div>\n     )}\n\n};\n","C:\\Users\\white\\Documents\\projects\\booksearch\\src\\reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":68,"column":13,"nodeType":"25","endLine":68,"endColumn":63},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]